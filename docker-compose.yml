version: '3.8'

services:
  # ðŸ”´ Redis para cache
  redis:
    image: redis:7-alpine
    container_name: apiprojudi-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - apiprojudi-network

  # ðŸš€ API PROJUDI
  api:
    build: .
    container_name: apiprojudi-api
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_URL=redis://redis:6379
      - PLAYWRIGHT_HEADLESS=true
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8081
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
      - ./downloads:/app/downloads
      - ./temp:/app/temp
    networks:
      - apiprojudi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ðŸ“Š Nginx (opcional - para proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: apiprojudi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - apiprojudi-network

volumes:
  redis_data:

networks:
  apiprojudi-network:
    driver: bridge